-- bdd funciona
-- OJO, hay que mantener el orden de creaci√≥n de las tablas que si no al hacer las FK las related no existen!

DROP TABLE IF EXISTS KIDS.T_PRODUCTOS;
CREATE TABLE kids.T_PRODUCTOS
(
    ID_PRODUCTO character(10)  NOT NULL,
    DESCRIPCION character(40)  NOT NULL,
    IMP_PRECIO numeric(15, 2) NOT NULL,
    NIVEL character(3)  NOT NULL,
    CONSTRAINT T_PRODUCTOS_pkey PRIMARY KEY (ID_PRODUCTO)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

DROP TABLE IF EXISTS KIDS.T_NIVELES;
CREATE TABLE kids.T_NIVELES
(
    ID_NIVEL character(4)  NOT NULL,
    DESCRIPCION character(40) ,
    CONSTRAINT T_NIVELES_pkey PRIMARY KEY (ID_NIVEL)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

DROP TABLE IF EXISTS KIDS.T_PADRES;
CREATE TABLE kids.T_PADRES
(
    ID_PADRE character(10)  NOT NULL,
    NOMBRE character(40)  NOT NULL,
    FEC_ALTA date NOT NULL,
    FEC_BAJA date,
    ACTIVO boolean NOT NULL,
    PASSWORD character(20)  NOT NULL,
    CONSTRAINT T_PARENTS_pkey PRIMARY KEY (ID_PADRE)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

COMMENT ON TABLE kids.T_PADRES
    IS 'Tabla para los padres registrados';

DROP TABLE IF EXISTS KIDS.T_HIJOS;
CREATE TABLE kids.T_HIJOS
(
    ID_PADRE character(10)  NOT NULL,
    ID_HIJO character(10)  NOT NULL,
    NOMBRE_HUO character(40)  NOT NULL,
    FEC_ALTA date NOT NULL,
    FEC_BAJA date,
    ACTIVO boolean NOT NULL,
    NIVEL character(4) ,
    PASSWORD character(20)  NOT NULL,
    IMP_MENSUAL numeric(15, 2),
    CONSTRAINT T_HIJOS_pkey PRIMARY KEY (ID_PADRE, ID_HIJO),
    CONSTRAINT FK2_HIJOS FOREIGN KEY (NIVEL)
        REFERENCES kids.T_NIVELES (ID_NIVEL) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT FK_HIJOS FOREIGN KEY (ID_PADRE)
        REFERENCES kids.T_PADRES (ID_PADRE) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

COMMENT ON TABLE kids.T_HIJOS
    IS 'TABLA PARA LOS HIJOS REGISTRADOS';


DROP TABLE IF EXISTS KIDS.T_CUENTAS;
CREATE TABLE kids.T_CUENTAS
(
    ID_CUENTA character(10)  NOT NULL,
    ID_HIJO character(10)  NOT NULL,
    IMP_SALDO numeric(15, 2) NOT NULL,
    FEC_ALTA date NOT NULL,
    FEC_BAJA date,
    ACTIVO boolean NOT NULL,
    ID_PADRE character(10) ,
    CONSTRAINT PK_CUENTAS PRIMARY KEY (ID_CUENTA, ID_HIJO),
    CONSTRAINT FK_CUENTAS FOREIGN KEY (ID_HIJO, ID_PADRE)
        REFERENCES kids.T_HIJOS (ID_HIJO, ID_PADRE) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

DROP TABLE IF EXISTS KIDS.T_TARJETAS;
CREATE TABLE kids.T_TARJETAS
(
    ID_TARJETA character(10)  NOT NULL,
    ID_CUENTA character(10)  NOT NULL,
    ID_HIJO character(10)  NOT NULL,
    FEC_ALTA date NOT NULL,
    FEC_BAJA date,
    ACTIVO boolean NOT NULL,
    CONSTRAINT PK_TARJETAS PRIMARY KEY (ID_TARJETA, ID_CUENTA, ID_HIJO),
    CONSTRAINT T_TARJETAS_ID_CUENTA_fkey FOREIGN KEY (ID_HIJO, ID_CUENTA)
        REFERENCES kids.T_CUENTAS (ID_HIJO, ID_CUENTA) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

DROP TABLE IF EXISTS KIDS.T_MOVIMIENTOS;
CREATE TABLE kids.T_MOVIMIENTOS
(
    ID_MOVIMIENTO character(10)  NOT NULL,
    ID_CUENTA character(10)  NOT NULL,
    ID_TARJETA character(10)  NOT NULL,
    IMP_MOVIMIENTO numeric(15, 2) NOT NULL,
    FEC_MOVIMIENTO date NOT NULL,
    DESCRIPCION character(40) ,
    IMP_SALDO numeric(15, 2),
    ID_PRODUCTO character(10) ,
    ID_HIJO character(10) ,
    CONSTRAINT PK_MOVS PRIMARY KEY (ID_MOVIMIENTO, ID_CUENTA, ID_TARJETA),
    CONSTRAINT FK_MOVS FOREIGN KEY (ID_TARJETA, ID_HIJO, ID_CUENTA)
        REFERENCES kids.T_TARJETAS (ID_TARJETA, ID_HIJO, ID_CUENTA) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;
